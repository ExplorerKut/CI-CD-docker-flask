name: Test and Deploy Image

on:
  push:
    branches: [ main ]

jobs:

  build:
    name: Lint code base
    runs-on: ubuntu-latest

    steps: 

      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Lint the python code
        uses: github/super-linter/slim@v4
        env:
          DISABLE_ERRORS: true
  
  build-push-image:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region : ${{ secrets.AWS_REGION }}

      - name: login to amazon ecr
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: flask-docker-web-app
          IMAGE_TAG: flask-docker-web-app
        run: |
          'docker build -t  $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .'
          'docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG'
      # - name: Create docker image
      #   run: docker build --file Dockerfile --tag flask-docker-web-app .
  

  